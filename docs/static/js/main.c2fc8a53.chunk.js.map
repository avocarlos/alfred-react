{"version":3,"sources":["theme.tsx","i18n/index.tsx","reducer/index.tsx","i18n/es_PA.tsx","i18n/en_US.tsx","context/index.tsx","hooks/useLanguage.tsx","components/TopBar/index.tsx","components/OrderCard/index.tsx","components/OrderSideBar/OrderItem.tsx","components/OrderSummary/index.tsx","components/OrderSideBar/ConfirmationDialog.tsx","components/OrderSideBar/index.tsx","components/MainContainer/index.tsx","components/FeaturedCard/index.tsx","components/CategoryCard/index.tsx","components/OrderCard/SummaryDialog.tsx","components/Categories/faker.tsx","components/Categories/index.tsx","components/Category/CategoryItem.tsx","components/Category/faker.tsx","components/Category/index.tsx","App.tsx","serviceWorker.ts","index.tsx","components/TopBar/logo-horizontal.png"],"names":["theme","Languages","createMuiTheme","palette","primary","main","secondary","background","default","paper","mixins","toolbar","minHeight","ActionEnum","es","root","language","en","order","title","args","number","submit","room","summary","item","price","total","subtotal","tax","dialog","confirmation","cancel","close","categories","orders","featured","products","count","initialState","ES","items","totalItems","reducer","state","action","type","Object","assign","payload","length","reduce","acc","quantity","initialContext","dispatch","StoreContext","React","createContext","SET_LANGUAGE","ReducerAction","useLanguage","useState","setLanguage","useContext","useEffect","localStorage","setItem","t","key","keys","split","I18n","getValue","statuses","useStyles","makeStyles","justifyContent","primaryText","flexGrow","logo","marginRight","spacing","maxHeight","headerFix","LanguageButton","menu","setMenu","onLanguageClick","IconButton","color","onClick","event","currentTarget","Menu","id","anchorEl","keepMounted","open","onClose","MenuItem","selected","TopBar","props","drawer","setDrawer","classes","AppBar","position","elevation","Toolbar","className","href","src","LogoSrc","alt","Typography","variant","Badge","badgeContent","listItem","paddingTop","paddingBottom","paddingRight","text","display","OrderItem","thumbnail","ListItem","divider","ListItemAvatar","Avatar","ListItemText","primaryTypographyProps","noWrap","ListItemSecondaryAction","Select","value","inputProps","name","map","toString","tableFooter","border","OrderSummary","itbms","footer","Table","TableHead","TableRow","TableCell","colSpan","align","TableBody","toFixed","size","ConfirmationDialog","onAccept","Dialog","DialogTitle","DialogContent","DialogActions","Button","container","height","alignItems","header","width","paddingLeft","list","button","borderRadius","boxShadow","withRouter","history","setConfirmation","Grid","direction","disableGutters","Divider","List","disablePadding","disabled","fullWidth","push","window","scrollTo","location","pathname","Container","children","Drawer","anchor","FeaturedCard","category","Card","CardActionArea","CardMedia","component","image","CardContent","paragraph","CategoryCard","amount","SummaryDialog","setSummary","OrderCard","status","faker","commerce","productName","food","Number","bottomSpace","marginBottom","onCategoryClick","xs","padding","avatar","CategoryItem","subtitle","Fab","description","productAdjective","Category","onAddItem","orderItem","find","SET_ORDER","gutterBottom","ReducerActions","App","useReducer","StoreReducer","getItem","Provider","path","exact","Categories","Boolean","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c2fc8a53.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#fff',\n    },\n    secondary: {\n      main: '#7c122e'\n    },\n    background: {\n      default: '#fff',\n      paper: '#fff'\n    }\n  },\n  mixins: {\n    toolbar: {\n      minHeight: 80\n    }\n  }\n});\n\nif (process.env.NODE_ENV === \"development\") {\n  console.log(theme);\n}\n\nexport default theme;","import es from './es_PA';\nimport en from './en_US';\n\nexport enum Languages {\n  ES = 'es',\n  US = 'en'\n}\n\nexport default {\n  es,\n  en\n};\n","import { Languages } from '../i18n';\n\ninterface Item {\n  id?: string;\n  name: string;\n  quantity: number;\n  price: number;\n  thumbnail: string;\n}\n\nexport interface Order {\n  id?: string;\n  number: number;\n  status?: string;\n  items:  Item[];\n  totalItems: number;\n}\n\nexport enum ActionEnum {\n  SET_LANGUAGE = 'SET_LANGUAGE',\n  SET_ORDER = 'SET_ORDER',\n  SET_ORDERS = 'SET_ORDERS'\n}\n\ntype LanguageAction = {\n  type: typeof ActionEnum.SET_LANGUAGE;\n  payload: {\n    language: Languages;\n  };\n}\n\ntype OrderAction = {\n  type: typeof ActionEnum.SET_ORDER;\n  payload: {\n    order: Order;\n  };\n}\n\ntype OrdersAction = {\n  type: typeof ActionEnum.SET_ORDERS;\n  payload: {\n    orders: Order[];\n  };\n}\n\nexport type Action = LanguageAction | OrderAction | OrdersAction;\n\n\nexport interface State {\n  language: Languages;\n  orders: Order[];\n  order: Order;\n}\n\nexport const initialState = {\n  language: Languages.ES,\n  orders: [],\n  order: {\n    number: 1,\n    items: [],\n    totalItems: 0\n  }\n}\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'SET_LANGUAGE':\n      return Object.assign({}, state, action.payload);\n    case 'SET_ORDERS':\n      const {payload: {orders}} = action;\n      \n      return Object.assign({}, state, {\n        orders: orders,\n        order: Object.assign({}, state.order, {\n          number: orders.length + 1\n        })\n      });\n    case 'SET_ORDER':\n      const {payload: {order}} = action;\n\n      return Object.assign({}, state, {\n        order: Object.assign(order, {\n          totalItems: order.items.reduce((acc, item) => acc += item.quantity, 0)\n        })\n      });\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","export default {\n  root: {\n    language: {\n      en: 'Ingles',\n      es: 'Español'\n    },\n    order: {\n      title: (args: {number: number}) => `Orden #${args.number}`,\n      submit: 'Realizar pedido'\n    },\n    room: (args: {number: number}) =>  `Habitación #${args.number}`,\n    summary: {\n      item: 'Pedido',\n      price: 'Precio',\n      total: 'Total',\n      subtotal: 'Subtotal',\n      tax: 'ITBMS'\n    },\n    dialog: {\n      confirmation: {\n        title: (args: {number: number}) =>  `Confirmar Orden #${args.number}`,\n        submit: 'Confirmar',\n        cancel: 'Cancelar'\n      },\n      summary: {\n        title: (args: {number: number}) =>  `Resumen Orden #${args.number}`,\n        close: 'Cerrar'\n      }\n    }\n  },\n  categories: {\n    orders: {\n      title: 'Ordenes Activas',\n      order: (args: {number: number}) => `Orden #${args.number}`\n    },\n    featured: {\n      title: 'Recomendados'\n    },\n    categories: {\n      title: 'Categorias',\n      products: (args: {count: number}) => `Productos (${args.count})`\n    }\n  }\n};","export default {\n  root: {\n    language: {\n      en: 'English',\n      es: 'Spanish'\n    },\n    order: {\n      title: (args: {number: number}) => `Order #${args.number}`,\n      submit: 'Place order'\n    },\n    room: (args: {number: number}) =>  `Room #${args.number}`,\n    summary: {\n      item: 'Item',\n      price: 'Price',\n      total: 'Total',\n      subtotal: 'Subtotal',\n      tax: 'ITBMS'\n    },\n    dialog: {\n      confirmation: {\n        title: (args: {number: number}) =>  `Confirm Order #${args.number}`,\n        submit: 'Confirm',\n        cancel: 'Cancel'\n      },\n      summary: {\n        title: (args: {number: number}) =>  `Summary Order #${args.number}`,\n        close: 'Close'\n      }\n    }\n  },\n  categories: {\n    orders: {\n      title: 'Active Orders',\n      order: (args: {number: number}) => `Order #${args.number}`\n    },\n    featured: {\n      title: 'Featured'\n    },\n    categories: {\n      title: 'Categories',\n      products: (args: {count: number}) => `Products (${args.count})`\n    }\n  }\n};","import React, { Dispatch } from 'react';\nimport { State, Action, initialState } from '../reducer';\n\nexport interface Context {\n  state: State;\n  dispatch: Dispatch<Action>;\n}\n\nconst initialContext = {\n  state: initialState,\n  dispatch: () => 0\n}\n\nconst StoreContext = React.createContext<Context>(initialContext);\n\nexport default StoreContext;","import {useState, useEffect, useContext} from 'react';\nimport StoreContext from '../context';\nimport { ActionEnum as ReducerAction } from '../reducer';\n\nimport I18n, { Languages } from '../i18n';\n\nconst { SET_LANGUAGE } = ReducerAction;\n\nfunction getValue(keys: string, args = {}, language: Languages): string {\n  const splittedKeys = keys.split('.');\n  // @ts-ignore\n  return splittedKeys.reduce((acc, key) => {\n    // @ts-ignore\n    if (typeof acc[key] === 'function' && args) {\n      // @ts-ignore\n      return acc[key](args);\n    }\n    // @ts-ignore\n    return acc[key];\n  }, I18n[language])\n}\n\n\nconst useLanguage =  () => {\n  const [language, setLanguage] = useState();\n  const {state, dispatch} = useContext(StoreContext);\n\n  useEffect(() => {\n    if (language && (state.language !== language)) {\n      dispatch({type: SET_LANGUAGE, payload: {language}});\n      localStorage.setItem('sessionLanguage', language);\n    }\n  }, [language, state.language, dispatch]);\n\n  function t(key: string, args = {}) {\n    return getValue(key, args, state.language || 'es' as Languages)\n  };\n\n  return {t, setLanguage};\n}\n\nexport default useLanguage;","import React, {useState, useContext} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LogoSrc from './logo-horizontal.png';\nimport useLanguage from '../../hooks/useLanguage';\nimport StoreContext from '../../context';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    justifyContent:'space-between'\n  },\n  primaryText: {\n    flexGrow:1\n  },\n  logo: {\n    marginRight: theme.spacing(4),\n    '& img': {\n      maxHeight:80 - theme.spacing(4)\n    }\n  },\n  headerFix: {\n    ...theme.mixins.toolbar\n  }\n}));\n\ninterface Props {\n  drawer: boolean;\n  setDrawer: (opened: boolean) => void;\n}\n\nconst LanguageButton = () => {\n  const [menu, setMenu] = useState<HTMLElement | null>(null);\n  const { state } = useContext(StoreContext);\n  const { t, setLanguage } = useLanguage();\n\n  function onIconClick(event: React.MouseEvent<HTMLButtonElement>) {\n    setMenu(event.currentTarget)\n  }\n\n  function onLanguageClick(language: string) {\n    setLanguage(language);\n    setMenu(null)\n  }\n\n  return (\n    <>\n      <IconButton color=\"inherit\" onClick={onIconClick}>\n        <LanguageIcon />\n      </IconButton>\n      {menu &&(\n        <Menu\n          id=\"language\"\n          anchorEl={menu}\n          keepMounted\n          open={true}\n          onClose={() => setMenu(null)}\n        >\n          <MenuItem selected={state.language === 'es'} onClick={() => onLanguageClick('es')}>{t('root.language.es')}</MenuItem>\n          <MenuItem selected={state.language === 'en'} onClick={() => onLanguageClick('en')}>{t('root.language.en')}</MenuItem>\n        </Menu>\n      )}\n    </>\n  );\n}\n\nconst TopBar: React.FC<Props> = (props) => {\n  const {drawer, setDrawer} = props;\n  const { state } = useContext(StoreContext);\n  const { t } = useLanguage();\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"fixed\" elevation={0}>\n        <Toolbar\n          classes={{root: classes.toolbar}}\n        >\n          <a className={classes.logo} href='/'>\n            <img src={LogoSrc} alt=\"Best Western logo\"/>\n          </a>\n          <Typography classes={{root:classes.primaryText}} variant=\"h6\" color=\"textSecondary\">\n            {t('root.room', {number: 15})}\n          </Typography>\n          <LanguageButton />\n          {!drawer && (\n            <IconButton\n              color=\"inherit\"\n              onClick={() => setDrawer(!drawer)}\n            >\n              <Badge badgeContent={state.order.totalItems} color=\"secondary\">\n                <ShoppingCart />\n              </Badge>\n            </IconButton>\n          )}\n        </Toolbar>\n      </AppBar>\n      <div className={classes.headerFix} />\n    </>\n  );\n};\n\nexport default TopBar;","import React, {useState} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport SummaryDialog from './SummaryDialog';\nimport useLanguage from '../../hooks/useLanguage';\n\nimport { Order } from '../../reducer';\n\nenum statuses {\n  Pending = 'Recibida',\n  'In Progress' = 'Preparacion',\n  Finished = 'Finalizada',\n  Delivered = 'Enviada'\n}\n\nexport type OrderStatus = 'Pending' | 'In Progress' | 'Finished' | 'Delivered';\n\ninterface Props {\n  status: OrderStatus;\n  number: number;\n  order: Order;\n}\n\nconst OrderCard: React.FC<Props> = (props) => {\n  const [summary, setSummary] = useState(false);\n  const {t} = useLanguage();\n  const {\n    number,\n    status,\n    order\n  } = props;\n  \n  return (\n    <Card elevation={2}>\n      <CardActionArea onClick={() => setSummary(true)}>\n        <CardContent>\n          <Typography variant=\"h6\">{t('categories.orders.order', {number})}</Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">{statuses[status]}</Typography>\n        </CardContent>\n      </CardActionArea>\n      {summary && <SummaryDialog order={order} setSummary={setSummary}/>}\n    </Card>\n  );\n}\n\nexport default OrderCard;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Avatar from '@material-ui/core/Avatar';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(9)\n  },\n  text: {\n    display:'flex'\n  }\n}))\n\ninterface Props {\n  title: string;\n  quantity: number;\n  thumbnail: string;\n}\n\nconst OrderItem: React.FC<Props> = (props) => {\n  const {title, quantity, thumbnail} = props;\n  const classes = useStyles();\n\n  return (\n    <ListItem \n      classes={{root:classes.listItem}}\n      divider\n    >\n      <ListItemAvatar>\n        <Avatar>\n          <img src={thumbnail}/>\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText \n        classes={{root:classes.text}}\n        primary={title}\n        primaryTypographyProps={{\n          noWrap: true,\n          variant: 'body2'\n        }}\n      />\n      <ListItemSecondaryAction>\n        <Select\n          value={quantity}\n          inputProps={{\n            name: 'quantity',\n            id: 'quantity',\n          }}\n        >\n          {[0,1,2,3,4,5,6,7,8,9].map((value) => (\n            <MenuItem \n              key={value} \n              value={value}\n            >\n              {value.toString()}\n            </MenuItem>\n          ))}\n        </Select>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nexport default OrderItem;","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useLanguage from '../../hooks/useLanguage';\nimport { Order } from '../../reducer';\n\nconst useStyles = makeStyles({\n  tableFooter: {\n    border:'none'\n  }\n});\n\nconst TAX_RATE = 0.1;\n\ninterface Props {\n  items: Order['items'];\n}\n\nconst OrderSummary: React.FC<Props> = ({items}) => {\n  const {t} = useLanguage();\n  const classes = useStyles();\n  const subtotal = items.reduce((acc, item) => acc += (item.price * item.quantity), 0)\n  const itbms = subtotal * TAX_RATE;\n  const total = subtotal + itbms;\n\n  const footer = [{\n    name: t('root.summary.subtotal'),\n    value: subtotal\n  }, {\n    name: t('root.summary.tax'),\n    value: itbms\n  }, {\n    name: t('root.summary.total'),\n    value: total\n  }];\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell colSpan={3}>{t('root.summary.item')}</TableCell>\n          <TableCell align=\"right\">{t('root.summary.price')}</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {items.map(({id, thumbnail, name, quantity, price}) => (\n          <TableRow key={id}>\n            <TableCell>\n              <Avatar src={thumbnail}/>\n            </TableCell>\n            <TableCell>\n              {name}\n            </TableCell>\n            <TableCell align=\"right\">\n              ${price.toFixed(2)} x{quantity}\n            </TableCell>\n            <TableCell align=\"right\">\n              <strong>${(price * quantity).toFixed(2)}</strong>\n            </TableCell>\n          </TableRow>\n        ))}\n        {footer.map(({name, value}) => (\n          <TableRow key={name}>\n            <TableCell \n              size=\"small\"\n              colSpan={3} \n              align=\"right\"\n              classes={{root:classes.tableFooter}}\n            >\n              {name}\n            </TableCell>\n            <TableCell \n              size=\"small\" \n              align=\"right\"\n              classes={{root:classes.tableFooter}}\n            >\n              <strong>${value.toFixed(2)}</strong>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n\nexport default OrderSummary;","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Summary from '../OrderSummary';\nimport useLanguage from '../../hooks/useLanguage';\nimport { Order } from '../../reducer';\n\ninterface Props {\n  order: Order;\n  onClose: () => void;\n  onAccept: () => void;\n}\n\nconst ConfirmationDialog: React.FC<Props> = ({order, onAccept, onClose}) => {\n  const {t} = useLanguage();\n  return (\n    <Dialog open={true} onClose={onClose}>\n      <DialogTitle>{t('root.dialog.confirmation.title', {number: order.number})}</DialogTitle>\n      <DialogContent>\n        <Summary items={order.items}/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>{t('root.dialog.confirmation.cancel', {number: order.number})}</Button>\n        <Button color=\"secondary\" onClick={onAccept}>{t('root.dialog.confirmation.submit', {number: order.number})}</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default ConfirmationDialog;","import React, {useState, useContext} from 'react';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport {makeStyles} from '@material-ui/core/styles';\nimport OrderItem from './OrderItem';\nimport List from '@material-ui/core/List';\nimport ConfirmationDialog from './ConfirmationDialog';\nimport {withRouter, RouteComponentProps} from 'react-router-dom';\nimport useLanguage from '../../hooks/useLanguage';\n\nimport StoreContext from '../../context';\n\nconst useStyles = makeStyles({\n  container: {\n    height:'100%',\n    alignItems:'stretch'\n  },\n  header: {\n    width:'100%'\n  },\n  toolbar: {\n    paddingLeft:8,\n    paddingRight:8\n  },\n  list: {\n    flexGrow:1,\n    width:'100%'\n  },\n  footer: {\n    width:'100%'\n  },\n  button: {\n    height:80,\n    borderRadius:0,\n    boxShadow:'unset'\n  }\n});\n\ninterface Props extends RouteComponentProps {\n  setDrawer: (opened: boolean) => void;\n}\n\nconst OrderSideBar: React.FC<Props> = (props) => {\n  const {setDrawer, history} = props;\n  const { state: { order, orders } } = useContext(StoreContext);\n  const {t} = useLanguage();\n  const [confirmation, setConfirmation] = useState(false);\n  const classes = useStyles();\n\n  const renderItems = () => order && order.items.map(({id, name, quantity, thumbnail}) => {\n    return <OrderItem key={id} title={name} quantity={quantity} thumbnail={thumbnail} />\n  });\n\n  function confirmOrder() {\n    history.push('/');\n    setConfirmation(false);\n    setDrawer(false);\n  }\n\n  return (\n    <Grid container direction=\"column\" classes={{container:classes.container}}>\n      <Grid item classes={{item:classes.header}}>\n        <Toolbar disableGutters classes={{root:classes.toolbar}}>\n          <IconButton color=\"inherit\" onClick={() => setDrawer(false)}>\n              <ChevronRightIcon />\n          </IconButton>\n          <Typography variant=\"h6\">{t('root.order.title', {number: order.number})}</Typography>\n        </Toolbar>\n        <Divider/>\n      </Grid>\n      <Grid item classes={{item:classes.list}}>\n        <List disablePadding>\n          {renderItems()}\n        </List>\n      </Grid>\n      <Grid item classes={{item:classes.footer}}>\n        <Button\n          disabled={!order.items.length}\n          variant=\"contained\" \n          color=\"secondary\"\n          size=\"large\" \n          fullWidth \n          classes={{root:classes.button}}\n          onClick={() => setConfirmation(true)}\n        >\n          {t('root.order.submit')}\n        </Button>\n      </Grid>\n      {confirmation && <ConfirmationDialog order={order} onClose={() => setConfirmation(false)} onAccept={confirmOrder} />}\n    </Grid>\n  );\n}\n\nexport default withRouter(OrderSideBar);","import React, { useState, useEffect } from 'react';\nimport TopBar from '../TopBar';\nimport OrderSideBar from '../OrderSideBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {withRouter, RouteComponentProps} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  drawer: {\n    width: 314\n  }\n})); \n\nconst MainContainer: React.FC<RouteComponentProps> = (props) => {\n  const [drawer, setDrawer] = useState(false);\n  const classes = useStyles({drawer});\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [props.location.pathname]);\n\n  return (\n    <div>\n      <TopBar drawer={drawer} setDrawer={setDrawer} />\n      <Container className={classes.main}>\n        {props.children}\n      </Container>\n      <Drawer\n        anchor=\"right\"\n        open={drawer}\n        classes={{paper: classes.drawer}}\n        onClose={() => setDrawer(false)}\n      >\n        <OrderSideBar setDrawer={setDrawer}/>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default withRouter(MainContainer);","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\ninterface Props {\n  title: string;\n  price: number;\n  category: {\n    id: string;\n    name: string;\n  };\n  thumbnail: string;\n  onClick: (category: string) => void;\n}\n\nconst FeaturedCard: React.FC<Props> = (props) => {\n  const {\n    title,\n    price,\n    category,\n    thumbnail,\n    onClick\n  } = props;\n\n  return (\n    <Card elevation={2}>\n      <CardActionArea onClick={() => onClick(category.id)}>\n        <CardMedia\n          component=\"img\"\n          alt={title}\n          image={thumbnail}\n          title={title}\n        />\n        <CardContent>\n          <Typography variant=\"h6\" noWrap>{title}</Typography>\n          <Typography paragraph variant=\"subtitle1\" color=\"textSecondary\">{category.name}</Typography>\n          <Typography align=\"right\" variant=\"h6\" color=\"secondary\">${price.toFixed(2)}</Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nexport default FeaturedCard;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport useLanguage from '../../hooks/useLanguage';\ninterface Props {\n  id: string;\n  title: string;\n  amount: number;\n  onClick: (category: string) => void;\n}\n\nconst CategoryCard: React.FC<Props> = (props) => {\n  const {t} = useLanguage();\n  const {\n    id,\n    title,\n    amount,\n    onClick\n  } = props;\n\n  return (\n    <Card elevation={2}>\n      <CardActionArea onClick={() => onClick(id)}>\n        <CardContent>\n          <Typography variant=\"h6\">{title}</Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">{t('categories.categories.products', {count: amount})}</Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nexport default CategoryCard;","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Summary from '../OrderSummary';\nimport useLanguage from '../../hooks/useLanguage';\nimport { Order } from '../../reducer';\ninterface Props {\n  order: Order;\n  setSummary: (open: boolean) => void\n}\n\nconst SummaryDialog: React.FC<Props> = (props) => {\n  const {t} = useLanguage();\n  const {order, setSummary} = props;\n\n  return (\n    <Dialog open={true} onClose={() => setSummary(false)}>\n      <DialogTitle>{t('root.dialog.summary.title', {number: order.number})}</DialogTitle>\n      <DialogContent>\n        <Summary items={order.items}/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setSummary(false)}>{t('root.dialog.summary.close')}</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default SummaryDialog;","import faker from 'faker';\n\nexport const categories = [{\n  id: '1',\n  name: 'Emparedados',\n  amount: 4,\n  items: [{\n    id: 1,\n    name: faker.commerce.productName(),\n    price: faker.commerce.price(),\n    thumbnail: `${faker.image.food()}?random=1`\n  }, {\n    id: 2,\n    name: faker.commerce.productName(),\n    price: faker.commerce.price(),\n    thumbnail: `${faker.image.food()}?random=2`\n  }, {\n    id: 3,\n    name: faker.commerce.productName(),\n    price: faker.commerce.price(),\n    thumbnail: `${faker.image.food()}?random=3`\n  }, {\n    id: 4,\n    name: faker.commerce.productName(),\n    price: faker.commerce.price(),\n    thumbnail: `${faker.image.food()}?random=4`\n  }]\n}, {\n  id: '2',\n  name: 'Ensaladas',\n  amount: 7\n}, {\n  id: '3',\n  name: 'Platos Fuertes',\n  amount: 5\n}, {\n  id: '4',\n  name: 'Postres',\n  amount: 9\n}, {\n  id: '5',\n  name: 'Bebidas',\n  amount: 4\n}, {\n  id: '6',\n  name: 'Servicios',\n  amount: 2\n}];\n\nexport const featured = [{\n  id: 1,\n  name: faker.commerce.productName(),\n  category: categories[0],\n  price: Number(faker.commerce.price(0, 99)),\n  thumbnail: `${faker.image.food()}?random=1`\n}, {\n  id: 2,\n  name: faker.commerce.productName(),\n  category: categories[0],\n  price: Number(faker.commerce.price(0, 99)),\n  thumbnail: `${faker.image.food()}?random=2`\n}, {\n  id: 3,\n  name: faker.commerce.productName(),\n  category: categories[0],\n  price: Number(faker.commerce.price(0, 99)),\n  thumbnail: `${faker.image.food()}?random=3`\n}, {\n  id: 4,\n  name: faker.commerce.productName(),\n  category: categories[0],\n  price: Number(faker.commerce.price(0, 99)),\n  thumbnail: `${faker.image.food()}?random=4`\n}];\n\nexport const orders = [{\n  id: 1,\n  number: 1,\n  status: 'Pending',\n  items: [{\n    id: 1,\n    name: faker.commerce.productName(),\n    quantity: 1,\n    category: {\n      id: 1,\n      name: 'Emparedados'\n    },\n    price: Number(faker.commerce.price(0, 99)),\n    thumbnail: `${faker.image.food()}?random=1`\n  }, {\n    id: 2,\n    name: faker.commerce.productName(),\n    quantity: 3,\n    category: {\n      id: 1,\n      name: 'Emparedados'\n    },\n    price: Number(faker.commerce.price(0, 99)),\n    thumbnail: `${faker.image.food()}?random=2`\n  }]\n}];","import React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport FeaturedCard from '../FeaturedCard';\nimport CategoryCard from '../CategoryCard';\nimport OrderCard from '../OrderCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport useLanguage from '../../hooks/useLanguage';\nimport { OrderStatus } from '../OrderCard';\nimport StoreContext from '../../context';\n\nimport {featured, categories} from './faker';\n\nconst useStyles = makeStyles((theme) => ({\n  bottomSpace: {\n    marginBottom: theme.spacing(6)\n  }\n}));\n\nconst Categories: React.FC<RouteComponentProps> = (props) => {\n  const classes = useStyles();\n  const { state: { orders } } = useContext(StoreContext);\n  const {t} = useLanguage();\n  const {history} = props;\n\n  function onCategoryClick(name: string): void {\n    history.push(`/categories/${name}`);\n  }\n\n  function renderCategories() {\n    return categories.map(({id, name, amount}) => (\n      <Grid key={id} item xs={3}>\n        <CategoryCard id={id} title={name} amount={amount} onClick={onCategoryClick} />\n      </Grid>\n    ));\n  }\n\n  function renderFeatured() {\n    return featured.map(({id, name, thumbnail, category, price}) => (\n      <Grid key={id} item xs={3}>\n        <FeaturedCard price={price} title={name} thumbnail={thumbnail} category={category} onClick={onCategoryClick} />\n      </Grid>\n    ));\n  }\n\n  function renderOrders() {\n    return orders.map((order) => (\n      <Grid key={order.id} item xs={3}>\n        <OrderCard status={order.status as OrderStatus} number={order.number} order={order} />\n      </Grid>\n    ));\n  }\n\n  return (\n    <Grid container>\n      {!!orders.length && (\n        <Grid item xs={12} classes={{item: classes.bottomSpace}}>\n          <Typography paragraph variant=\"h5\">{t('categories.orders.title')}</Typography>\n          <Grid container spacing={4} classes={{container: classes.bottomSpace}}>\n            {renderOrders()}\n          </Grid>\n          <Divider/>\n        </Grid>\n      )}\n      <Grid item xs={12} classes={{item: classes.bottomSpace}}>\n        <Typography paragraph variant=\"h5\">{t('categories.featured.title')}</Typography>\n        <Grid container spacing={4}>\n          {renderFeatured()}\n        </Grid>\n      </Grid>\n      <Grid item xs={12} classes={{item: classes.bottomSpace}}>\n        <Typography paragraph variant=\"h5\">{t('categories.categories.title')}</Typography>\n        <Grid container spacing={4}>\n          {renderCategories()}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withRouter(Categories);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Fab from '@material-ui/core/Fab';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Item } from './index';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(3)\n  },\n  avatar: {\n    width: 70,\n    height: 70,\n    borderRadius:0\n  },\n  primaryText: {\n    flexGrow:1\n  }\n}));\ninterface Props {\n  title: string;\n  subtitle?: string;\n  thumbnail: string;\n  price: number;\n  onClick: (item: Item) => void;\n}\n\nconst CategoryItem: React.FC<Props> = ({thumbnail, title, subtitle, price, onClick}) => {\n  const classes = useStyles();\n\n  function onAddItem() {\n    const item = {\n      name: title,\n      quantity: 1,\n      thumbnail,\n      price\n    }\n    onClick(item);\n  }\n\n  return (\n    <Grid container classes={{container: classes.container}} spacing={4} alignItems=\"center\">\n      <Grid item>\n        <Avatar src={thumbnail} classes={{root:classes.avatar}} />\n      </Grid>\n      <Grid item classes={{item:classes.primaryText}}>\n        <Typography variant=\"h6\">{title}</Typography>\n        {subtitle && <Typography variant=\"subtitle1\" color=\"textSecondary\">{subtitle}</Typography>}\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h6\">${price.toFixed(2)}</Typography>\n      </Grid>\n      <Grid item>\n        <Fab size=\"medium\" color=\"secondary\" onClick={onAddItem}>\n          <AddShoppingCartIcon />\n        </Fab>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default CategoryItem;","import faker from 'faker';\n\nexport const category = {\n  id: '1',\n  name: 'Emparedados',\n  items: [{\n    id: 1,\n    name: faker.commerce.productName(),\n    description: faker.commerce.productAdjective(),\n    price: Number(faker.commerce.price(0, 20)),\n    thumbnail: `${faker.image.food()}?random=1`\n  }, {\n    id: 2,\n    name: faker.commerce.productName(),\n    price: Number(faker.commerce.price(0, 20)),\n    thumbnail: `${faker.image.food()}?random=2`\n  }, {\n    id: 3,\n    name: faker.commerce.productName(),\n    price: Number(faker.commerce.price(0, 20)),\n    thumbnail: `${faker.image.food()}?random=3`\n  }, {\n    id: 4,\n    name: faker.commerce.productName(),\n    price: Number(faker.commerce.price(0, 20)),\n    thumbnail: `${faker.image.food()}?random=4`\n  }]\n};","import React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CategoryItem from './CategoryItem';\nimport StoreContext from '../../context';\nimport { ActionEnum as ReducerAction } from '../../reducer';\nimport {category} from './faker';\n\nexport interface Item {\n  name: string;\n  quantity: number;\n  price: number;\n  thumbnail: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  bottomSpace: {\n    marginBottom: theme.spacing(4)\n  }\n}));\n\nconst Category: React.FC = () => {\n  const classes = useStyles();\n  const {state, dispatch} = useContext(StoreContext);\n\n  function onAddItem(item: Item) {\n    const { order } = state;\n\n    if (order) {\n      const orderItem = order.items.find(({name}) => name === item.name);\n\n      if (orderItem) {\n        orderItem.quantity += 1;\n      } else {\n        order.items.push(item);\n      }\n\n      dispatch({type: ReducerAction.SET_ORDER, payload: {order}})\n    }\n  }\n\n  const renderItems = () => category.items.map(({id, name, thumbnail, price, description}) => {\n    return (\n      <Grid item xs={12}>\n        <CategoryItem key={id} title={name} thumbnail={thumbnail} price={price} subtitle={description} onClick={onAddItem} />\n        <Divider/>\n      </Grid>\n    );\n  })\n\n  return (\n    <Grid container>\n      <Grid item xs={12} classes={{item: classes.bottomSpace}}>\n        <Typography gutterBottom variant=\"h5\">{category.name}</Typography>\n        <Grid container>\n          {renderItems()}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Category;","import React, {useEffect, useReducer} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport MainContainer from './components/MainContainer';\nimport Categories from './components/Categories';\nimport Category from './components/Category';\nimport StoreReducer, { ActionEnum as ReducerActions, initialState } from './reducer';\nimport StoreContext from './context';\nimport ApiClient from './libs/apiClient';\nimport axios from \"axios\";\n\nimport { Languages } from './i18n';\n\nconst { SET_LANGUAGE } = ReducerActions;\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useReducer(StoreReducer, initialState);\n\n  useEffect(() => {\n    const language = localStorage.getItem('sessionLanguage') as Languages;\n    if (language && language !== state.language) {\n      dispatch({type: SET_LANGUAGE, payload: {language}});\n    }\n  }, [state.language]);\n\n  // useEffect( () =>{\n  //     const prepareRequest =  ApiClient.getHeaders('');\n  //     prepareRequest.then(()=>{\n  //         const logClientIn = axios.get('http://127.0.0.1:8000/api/auth/20190921032517/');\n  //         logClientIn.then((response)=>{\n  //             console.log(\"New client logged in\", response);\n  //         });\n  //     });\n  // });\n\n  return (\n    <Router>\n      <StoreContext.Provider value={{state, dispatch}}>\n        <MainContainer>\n          <Route path=\"/\" exact component={Categories}/>\n          <Route path=\"/categories/:categoryId\" component={Category}/>\n        </MainContainer>\n      </StoreContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {ThemeProvider} from '@material-ui/styles';\nimport theme from './theme';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n    <CssBaseline />\n  </ThemeProvider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-horizontal.ce8b650f.png\";"],"sourceRoot":""}